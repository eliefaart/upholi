name: Web app

on:
  push:
    paths:
      - '.github/workflows/app.yml'
      - 'app/**'

env:
  IMAGE_NAME: upholi-app

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: setup node.js
      uses: actions/setup-node@v1
      with:
        node-version: 10.x

    - name: npm install
      run: |
        cd ./app
        npm install

  lint:
    runs-on: ubuntu-latest
    needs: setup

    steps:
    - uses: actions/checkout@v2
    - name: eslint
      run: |
        cd ./app
        npm install

  build:
    runs-on: ubuntu-latest
    needs: setup

    steps:
    - uses: actions/checkout@v2
    - name: build
      run: |
        cd ./app
        npm run build-prd

  publish:
    runs-on: ubuntu-latest
    needs: [ build, lint ]
    if: ${{ github.ref == 'refs/heads/master' }}

    steps:
    - uses: actions/checkout@v2

    # Authenticate
    - name: authenticate to githib registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

    # Build docker
    - name: build docker image
      run: |
        cd ./app
        docker build . --file Dockerfile --tag $IMAGE_NAME

    # Publish docker
    - name: push docker image
      run: |
        cd ./app
        IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME

        # Change all uppercase to lowercase
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

        # Strip git ref prefix from version
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

        # Strip "v" prefix from tag name
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

        # Use Docker `latest` tag convention
        [ "$VERSION" == "master" ] && VERSION=latest

        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION

        docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION