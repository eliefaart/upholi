name: Publish

on:
  push:
    branches: [ master, docker ]
  pull_request:
    branches: [ master, docker ]

env:
  IMAGE_NAME_FRONTEND_APP: hummingbird-app
  IMAGE_NAME_SERVER: hummingbird-server

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    # Frontend App
    # TODO

    # Server
    - name: Server - Build
      run: cd ./server && cargo build --verbose
    - name: Server - Run tests
      run: cd ./server && cargo test --verbose
    
    # Docker
    # - name: Docker - Compose
    #   run: docker-compose up --build -d

    - name: Frontend app - Build docker image
      run: docker build . --file Dockerfile --tag $IMAGE_NAME_FRONTEND_APP

    - name: Server - Build docker image
      run: docker build . --file Dockerfile --tag $IMAGE_NAME_SERVER



    # Publish
    - name: Log into registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

    # Publish Frontend app
    - name: Frontend app - Push docker image
      run: |
        IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME_FRONTEND_APP
        
        # Change all uppercase to lowercase
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

        # Strip git ref prefix from version
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

        # Strip "v" prefix from tag name
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

        # Use Docker `latest` tag convention
        [ "$VERSION" == "master" ] && VERSION=latest

        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION

        docker tag $IMAGE_NAME_FRONTEND_APP $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION

    # Publish Server
    - name: Server - Push docker image
      run: |
        IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME_SERVER
        
        # Change all uppercase to lowercase
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

        # Strip git ref prefix from version
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

        # Strip "v" prefix from tag name
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

        # Use Docker `latest` tag convention
        [ "$VERSION" == "master" ] && VERSION=latest

        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION

        docker tag $IMAGE_NAME_SERVER $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION
