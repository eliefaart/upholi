$modalHeaderHeight: $buttonHeight;

.modal-overlay {
	position: fixed;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	z-index: 3;
	display: flex;
	justify-content: center;
	background: var(--colorBackgroundShadow);
}

.modal {
	position: absolute;
	background: var(--colorBackground);
	overflow: auto;
	box-shadow: 0 0 5px var(--colorBackgroundShadow, 40);
	border-radius: $borderRadius;
	margin: 5%;

	display: flex;
	flex-direction: column;

	.modal-header {
		display: flex;
		z-index: 1;
		background: var(--colorBackground);
		padding: $spacing;

		.title {
			display: flex;
			height: $headerHeight;
			flex: 0 1 100%;
			line-height: $modalHeaderHeight;
			font-weight: bold;
			margin-left: $spacing;
		}

		button svg {
			height: 100%;
		}
	}

	.modal-body {
		display: flex;
		flex: 0 1 100%;
		align-items: center;
		min-height: 100px;
		min-width: 350px;
		flex-direction: column;
		gap: $spacing;
		padding: $spacing;
	}

	.modal-footer {
		flex: 0 0 auto;
		display: flex;
		justify-content: right;


		&:not(:empty) {
			padding: $spacing;
			margin-top: $spacingLarge;

			// Use :before psuedo element to create a top-border that doesn't fill the entire width.
			&:before {
				content: "";
				position: absolute;
				left: 5%;
				width: 90%;
				border-top: 1px solid var(--colorBackgroundShadow);
			}
		}
	}

	&.fullscreen {
		position: static;
		height: 100vh;
		width: 100vw;
		margin: unset;
		border: none;
		padding: $spacing;

		.modal-body {
			padding: $spacing 0 0 0;
		}

		.modal-header {
			height: $headerHeight;
			background: var(--colorHeaderBackground);
			border-radius: $borderRadius;
			display: flex;
			justify-content: right;
			align-items: center;
			padding: 0;
		}
	}

	&:not(.fullscreen) .modal-body {
		max-height: 80vh;
	}
}

@media only screen and (max-width: $breakpointMobile) {
	.modal {
		right: 3%;
		left: 3%;
	}
}